// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "sqlite"
  url      = env("SECRET_DATABASE_URL")
}

model Session {
  id    String @id @default(cuid())
  token String @unique

  created_at DateTime @default(now())

  user    User   @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id String
}

model User {
  id              String   @id @default(uuid())
  full_name       String
  email           String   @unique
  created_at      DateTime @default(now())
  //Password fields
  password_salt   String
  password_hash   String
  password_digest String

  //relations
  sessions Session[]
}

model Catalog {
  id          String    @id @default(cuid())
  name        String    @unique // Unieke naam voor de catalogus (bijv. 'eindhoven-open-data')
  title       String // Leesbare titel (bijv. 'Eindhoven Open Data Portal')
  description String? // Optionele beschrijving
  apiStandard String // Bijv. 'opendatasoft_explore_v2', 'ckan_api_v3', 'socrata'
  apiUrl      String // Volledige basis-URL van de API (bijv. https://data.eindhoven.nl/api/explore/v2.1)
  apiKey      String? // Optionele API-sleutel voor authenticatie
  // Optionele velden die automatisch kunnen worden ingevuld of gebruikt voor beheer
  isActive    Boolean   @default(true) // Of de catalogus momenteel wordt gesynchroniseerd
  lastSync    DateTime? // Datum van de laatste synchronisatie
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  Dataset     Dataset[]

  @@map("catalogs")
}

model Dataset {
  id String @id @default(cuid())

  // üîó Relatie met de oorspronkelijke catalogus
  catalog   Catalog @relation(fields: [catalogId], references: [id], onDelete: Cascade)
  catalogId String

  // üì¶ DCAT-AP 2.0 - Core Metadata (zo compleet mogelijk)
  title         String // dct:title
  description   String // dct:description
  identifier    String // dct:identifier ‚Äî uniek binnen de catalogus of globaal
  issued        DateTime? // dct:issued
  modified      DateTime? // dct:modified
  language      String? // dct:language (bijv. "nl", "en")
  theme         String? // dcat:theme ‚Äî URI of label (bijv. "http://publications.europa.eu/resource/authority/data-theme/ENER")
  spatial       String? // dct:spatial ‚Äî WKT of URI (bijv. "Eindhoven")
  temporalStart DateTime? // dcterms:temporal ‚Äî start
  temporalEnd   DateTime? // dcterms:temporal ‚Äî end

  // üìÑ Licentie & toegang (DCAT-AP velden)
  license      String? // dct:license ‚Äî URI (bijv. "http://creativecommons.org/licenses/by/4.0/")
  accessRights String? // dcat:accessRights ‚Äî URI (bijv. "http://publications.europa.eu/resource/authority/access-right/PUBLIC")

  // üîó Distributie (minimaal 1)
  accessUrl   String? // dcat:accessURL ‚Äî API-endpoint waar data te vinden is
  downloadUrl String? // dcat:downloadURL ‚Äî directe download (optioneel)
  mediaType   String? // dcat:mediaType ‚Äî bijv. "application/json"

  // ‚öôÔ∏è Beheer binnen jouw dataspace (niet onderdeel van DCAT-AP)
  isPublished  Boolean       @default(false) // Of deze dataset wordt opgenomen in jouw DCAT-AP feed
  policyIntent PolicyIntent? @default(PUBLIC) // Simulatie van toegangsbeleid (zie enum hieronder)
  notes        String? // Interne notities (bijv. "Gebruikt in Inzicht Verlicht")

  // üïí Tijdsaanduidingen
  importedAt  DateTime  @default(now()) // Wanneer metadata ge√Ømporteerd is
  publishedAt DateTime? // Wanneer voor het eerst gepubliceerd in jouw feed

  @@unique([catalogId, identifier]) // Zorg dat dezelfde dataset niet dubbel wordt ge√Ømporteerd
  @@map("datasets")
}

enum PolicyIntent {
  PUBLIC // Openbaar toegankelijk (geen OPA-check nodig)
  RESTRICTED // Alleen voor bepaalde partijen (OPA regelt toegang via APISIX)
  INTERNAL // Alleen Fontys (niet publiceren via DCAT-AP)
}
